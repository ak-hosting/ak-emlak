# AK Emlak - Docker Compose Yapılandırması
# Geliştirme ve production ortamları için

version: '3.8'

services:
  # Ana web uygulaması
  ak-emlak:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ak-emlak-web
    restart: unless-stopped
    ports:
      - "8082:80"
    environment:
      - NODE_ENV=production
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      # Geliştirme için hot reload (opsiyonel)
      # - ./index.html:/usr/share/nginx/html/index.html:ro
      # - ./assets:/usr/share/nginx/html/assets:ro
      # Log dosyaları
      - ./logs/nginx:/var/log/nginx
    networks:
      - ak-emlak-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ak-emlak.rule=Host(`localhost`)"
      - "traefik.http.services.ak-emlak.loadbalancer.server.port=80"

  # Nginx reverse proxy (opsiyonel)
  nginx-proxy:
    image: nginx:alpine
    container_name: ak-emlak-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/proxy:/var/log/nginx
    depends_on:
      - ak-emlak
    networks:
      - ak-emlak-network
    profiles:
      - production

  # Redis cache (gelecekte kullanım için)
  redis:
    image: redis:alpine
    container_name: ak-emlak-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ak-emlak-network
    profiles:
      - production
      - cache

  # PostgreSQL database (gelecekte kullanım için)
  postgres:
    image: postgres:15-alpine
    container_name: ak-emlak-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ak_emlak
      POSTGRES_USER: ak_user
      POSTGRES_PASSWORD: ak_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - ak-emlak-network
    profiles:
      - production
      - database

  # Adminer (database yönetimi için)
  adminer:
    image: adminer:latest
    container_name: ak-emlak-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - ak-emlak-network
    profiles:
      - production
      - database

  # Certbot (SSL sertifikaları için)
  certbot:
    image: certbot/certbot
    container_name: ak-emlak-certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./webroot:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ak@ak-pro.com --agree-tos --no-eff-email -d yourdomain.com
    profiles:
      - ssl

networks:
  ak-emlak-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local

# ===========================================
# KULLANIM TALİMATLARI
# ===========================================
#
# Geliştirme ortamı:
# docker-compose up -d
#
# Production ortamı:
# docker-compose --profile production up -d
#
# Database ile:
# docker-compose --profile database up -d
#
# SSL sertifikası ile:
# docker-compose --profile ssl up -d
#
# Tüm servisler:
# docker-compose --profile production --profile database --profile ssl up -d
#
# ===========================================
# ORTAM DEĞİŞKENLERİ
# ===========================================
# NODE_ENV: production/development
# NGINX_HOST: localhost
# NGINX_PORT: 80
# POSTGRES_DB: ak_emlak
# POSTGRES_USER: ak_user
# POSTGRES_PASSWORD: ak_password_2024
#
# ===========================================
# PORT YAPILANDIRMASI
# ===========================================
# 8080: Ana web uygulaması
# 80: Nginx proxy (production)
# 443: HTTPS (production)
# 6379: Redis cache
# 5432: PostgreSQL database
# 8081: Adminer (database yönetimi)
#
# ===========================================
# VOLUME YAPILANDIRMASI
# ===========================================
# ./logs/nginx: Nginx log dosyaları
# ./logs/proxy: Proxy log dosyaları
# ./ssl: SSL sertifikaları
# ./webroot: Certbot webroot
# redis-data: Redis verileri
# postgres-data: PostgreSQL verileri
#
# ===========================================
# NETWORK YAPILANDIRMASI
# ===========================================
# ak-emlak-network: Bridge network
# Subnet: 172.20.0.0/16
#
# ===========================================
# HEALTH CHECK
# ===========================================
# - Interval: 30s
# - Timeout: 10s
# - Retries: 3
# - Start period: 40s
# - Test: curl -f http://localhost/health
#
# ===========================================
# PROFİLLER
# ===========================================
# production: Production ortamı servisleri
# cache: Redis cache servisi
# database: PostgreSQL ve Adminer
# ssl: SSL sertifikası yönetimi 